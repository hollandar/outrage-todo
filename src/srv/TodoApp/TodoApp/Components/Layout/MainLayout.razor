@inherits LayoutComponentBase
@implements IDisposable

@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager

<div class="page">
    <div class="header">
        <header>
            <div class="toggle">
                <ui-toggler toggle-event="toggle-nav-event"><i class="fas fa-bars fa-2xl"></i></ui-toggler>
            </div>

            <div class="brand">
                TODO
            </div>

            <nav class="menu">
                <NavLink Match="NavLinkMatch.All" href="/">Home</NavLink>
                <NavLink href="/counter">Counter</NavLink>
                <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
                <a href="https://bing.com" target="_blank">Bing</a>
            </nav>

            <div class="tools actions">
                <AuthorizeView>
                    <Authorized>
                        <a class="avatar" href="/account/manage" title="Manage account">
                            <img src="@avatarUri" alt="Avatar" />
                        </a>
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button class="ghost" type="submit">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <a class="button ghost" href="/Account/Login">Login</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </header>
    </div>
    <div class="nav">
        <ui-toggled toggle-event="toggle-nav-event">
            <NavMenu />
        </ui-toggled>
    </div>
    <div class="main">
        @Body
    </div>
    <div class="footer">Footer</div>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    string avatarUri = string.Empty;
    private string? currentUrl;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        this.avatarUri = authState.User.Claims.FirstOrDefault(r => r.Type == "github_avatar_url")?.Value ?? String.Empty;

        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        await base.OnInitializedAsync();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}