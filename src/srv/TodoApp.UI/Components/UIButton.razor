<button class="@Classes()" @onclick="Clicked">@ChildContent</button>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnClick { get; set; }
    [Parameter] public bool Neutral { get; set; }
    [Parameter] public bool Primary { get; set; }
    [Parameter] public bool Secondary { get; set; }
    [Parameter] public bool Accent { get; set; }
    [Parameter] public bool Info { get; set; }
    [Parameter] public bool Success { get; set; }
    [Parameter] public bool Warning { get; set; }
    [Parameter] public bool Error { get; set; }
    [Parameter] public bool Ghost { get; set; }
    [Parameter] public bool Link { get; set; }
    [Parameter] public bool Outline { get; set; }
    [Parameter] public bool Active { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public bool Glass { get; set; }
    [Parameter] public bool NoAnimation { get; set; }
    [Parameter] public bool Large { get; set; }
    [Parameter] public bool Medium { get; set; }
    [Parameter] public bool Small { get; set; }
    [Parameter] public bool ExtraSmall { get; set; }
    [Parameter] public bool Circle { get; set; }
    [Parameter] public bool Square { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; } = new Dictionary<string, object>();

    private async Task Clicked()
    {
        await OnClick.InvokeAsync();
    }

    private string Classes()
    {
        var initial = "btn-primary";
        if (Neutral) initial = "btn-neutral";
        if (Primary) initial = "btn-primary";
        if (Secondary) initial = "btn-secondary";
        if (Accent) initial = "btn-accent";
        if (Info) initial = "btn-info";
        if (Success) initial = "btn-success";
        if (Warning) initial = "btn-warning";
        if (Error) initial = "btn-error";
        if (Ghost) initial = "btn-ghost";
        if (Link) initial = "btn-link";

        HashSet<string> result = ["btn"];
        if (Outline) result.Add("btn-outline");
        if (Active) result.Add("btn-active");
        if (Disabled) result.Add("btn-disabled");
        if (Glass) result.Add("glass");
        if (NoAnimation) result.Add("no-animation");
        if (Large) result.Add("btn-lg");
        if (Medium) result.Add("btn-md");
        if (Small) result.Add("btn-sm");
        if (ExtraSmall) result.Add("btn-xs");
        if (Circle) result.Add("btn-circle");
        if (Square) result.Add("btn-square");

        return String.Join(" ", [initial, ..result]);
    }
}